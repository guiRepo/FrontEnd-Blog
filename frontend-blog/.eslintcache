[{"/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/index.js":"1","/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/App.js":"2","/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/routes.js":"3","/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/pages/Main/index.js":"4","/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/pages/Users/index.js":"5","/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/pages/Posts/index.js":"6","/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/api/apiPost.js":"7","/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/api/apiUser.js":"8","/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/components/Modal.js":"9"},{"size":199,"mtime":1608687720984,"results":"10","hashOfConfig":"11"},{"size":155,"mtime":1608693224062,"results":"12","hashOfConfig":"11"},{"size":559,"mtime":1608727390098,"results":"13","hashOfConfig":"11"},{"size":119,"mtime":1608690095282,"results":"14","hashOfConfig":"11"},{"size":1094,"mtime":1608726808342,"results":"15","hashOfConfig":"11"},{"size":700,"mtime":1608699369625,"results":"16","hashOfConfig":"11"},{"size":146,"mtime":1608694812440,"results":"17","hashOfConfig":"11"},{"size":146,"mtime":1608694539499,"results":"18","hashOfConfig":"11"},{"size":277,"mtime":1608728667819,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1dis3em",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/index.js",[],["41","42"],"/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/App.js",[],"/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/routes.js",[],"/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/pages/Main/index.js",[],"/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/pages/Users/index.js",["43"],"import React, { Component } from 'react'\nimport apiUser from '../../api/apiUser'\n\nimport Modal from '../../components/Modal'\n\nclass ListagemUsers extends Component {\n\n    state = {\n        users: [],\n        user: {},\n        isModalVisible: false\n    }\n\n    async componentDidMount() {\n        const response = await apiUser.get('')\n\n        console.log(response)\n        this.setState({ users: response.data })\n    }\n\n\n\n    render() {\n        const { users, user, isModalVisible } = this.state\n        console.log(user)\n        console.log(isModalVisible)\n\n        return (\n            <div>\n                <h1> Listar usuarios </h1>\n                {console.log(users)}\n                {users.map(user => (\n                    <ul key={user.id}>\n                        <a>{user.name}</a>\n                        <button onClick={() => this.setState({ isModalVisible: true, user })}>Detalhes</button>\n                    </ul>\n\n                )\n                )}\n                {isModalVisible && <Modal user={user} />}\n            </div>\n        )\n    }\n}\n\n\nexport default ListagemUsers","/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/pages/Posts/index.js",["44"],"import React, { Component } from 'react'\nimport apiPost from '../../api/apiPost'\n\nclass ListagemPosts extends Component {\n\n    state = {\n        posts: [],\n    }\n\n    async componentDidMount() {\n        const response = await apiPost.get('')\n\n\n        this.setState({ posts: response.data })\n    }\n\n    render() {\n        const { posts } = this.state\n\n        return (\n            <div>\n                <h1> Listar posts </h1>\n                {console.log(posts)}\n                {posts.map(posts => (\n                    <ul key={posts.id}>\n                        <a>{posts.title}</a>\n                    </ul>\n                ))}\n            </div>\n        )\n    }\n}\n\n\nexport default ListagemPosts","/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/api/apiPost.js",[],"/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/api/apiUser.js",[],"/home/guiboot/FrontEnd-Blog/FrontEnd-Blog/frontend-blog/src/components/Modal.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":34,"column":25,"nodeType":"51","endLine":34,"endColumn":28},{"ruleId":"49","severity":1,"message":"50","line":26,"column":25,"nodeType":"51","endLine":26,"endColumn":28},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]